//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""RTS"",
            ""id"": ""db75abd6-095e-4da9-9eab-318f29c4b2b1"",
            ""actions"": [
                {
                    ""name"": ""SetShipDestination"",
                    ""type"": ""Button"",
                    ""id"": ""019a350c-eccc-4cf0-83b6-4686af9e0ff6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""1cb276e6-688e-4ee2-b40d-7f51df560a9b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""b36924a3-84b4-4676-9131-768607e70dfe"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ActivateRotation"",
                    ""type"": ""Button"",
                    ""id"": ""e8cdce70-d667-4abf-bf4a-38b5bcc58c24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1.401298E-45)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7318003e-9cc9-4490-a1be-d537ae0148a7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollZoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d5a19152-6d63-4697-9992-82a8448cc167"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FocusOnTarget"",
                    ""type"": ""Button"",
                    ""id"": ""6081ba4d-c84b-45f8-8758-46befe73d6e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disconnect"",
                    ""type"": ""Button"",
                    ""id"": ""c55e5b51-7089-462d-bf47-849be9e593e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""99008916-8c03-4d57-bb6f-a523a6fb9447"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""SetShipDestination"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6bc7334-b9eb-4ece-b2b4-1c20df2470aa"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac486511-d019-4eff-afb5-1e494abac45b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""418c8804-b04e-4962-b596-fbb46db26e2a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5c5edae0-4494-4819-9b1b-75234a02b6e4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""885def62-bb65-4bc9-b755-7f2d8259b81a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f553733c-782c-431c-b480-f53ac190b2b6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4660f7ba-1499-4f35-925f-4b734ed4419f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""adc440a2-fd27-4998-8ee8-1246dd17d01c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ActivateRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7bdacc2-d6a8-4753-aa98-77c5a10e41bd"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b43b00e2-6f16-4614-97ba-ce70b08e0fcf"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ScrollZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba33fbc3-5ff0-4216-9f85-879960fc1f5a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""FocusOnTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9375fd1-2271-430f-988e-f48ee0e343f2"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""532554ec-e9b0-4030-a469-149c3454bc0b"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player"",
            ""id"": ""5a584609-9184-4244-8365-c47eb7ea4bcf"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""ace47d6b-af71-419a-95a3-22daf81fb1be"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LookRotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fcb4f7b2-3fc4-43ce-94a7-19f878b470e9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""426393f0-ed69-4cc9-8e4d-7742c3206fe0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5bc9279c-5243-4b14-a016-6be4b0701e11"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7cb13459-a925-49f7-a40a-6e5be615ef8c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2fee8dfa-0dec-4be7-9289-bbe283ccf3b0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""452905c4-5b0f-4a16-8068-586a407ac541"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6a0f5a87-ed11-4684-89cc-085dda00f6f0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6ef7ea2a-bb59-41ac-9fff-f9ca243a2748"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""53e9f743-7c72-4c71-8461-4d32404233a3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f7ccf872-b5ff-4ad9-8bf6-8eb15d6f0608"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2f9dbec9-e4c7-4d6d-a15c-f264f797b065"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""264dc84c-c1d9-457a-a694-af5745e5555f"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b27f54f2-74cb-4dc7-9939-8170eb9008a4"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c487305d-f271-4049-a4a5-63fda268bdb8"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""LookRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a3ecfa1-b91e-4c51-a167-16838787607e"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""LookRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0ca5210-cce3-40b0-b2e2-7c7b3b3b4c6f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a96e0b1-668f-4711-97f4-a9cfc4f53ec4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Turret"",
            ""id"": ""17b30623-0e12-4ed6-a350-19c410b9253d"",
            ""actions"": [
                {
                    ""name"": ""LookRotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eafa6c3f-5f9c-4349-9da6-0e4c63a93a67"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disconnect"",
                    ""type"": ""Button"",
                    ""id"": ""93d66d2d-ebac-4e3d-bea1-8b653ae594a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""aac96a45-c5d6-4b7c-b3f4-f562a4bb794c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""20917257-8602-4f5d-b00d-4cf683775910"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""LookRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c799b11-cd7b-4f00-ba42-4a090e91b187"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""LookRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c11d94e-b574-4e36-88d4-b0c177aa2c50"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9492128-6dc4-4fa5-ba1f-29d1c1a0191b"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b2c63ab-8111-492c-b875-76f9fdbd10e5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7d1c5ba-658e-4d03-b782-0065ec11059f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Ship"",
            ""id"": ""10f8b3c2-c014-459d-975b-c8fd39a571df"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""4d481d96-678d-40f2-bd58-7460f292e8a6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d5b60598-add4-48da-9006-add8cc5816c4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollZoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""739d0da9-25a8-418e-b285-0bd901520caf"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disconnect"",
                    ""type"": ""Button"",
                    ""id"": ""762a01aa-2b8d-4697-82e5-71154971c81b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""434a54ab-2958-4028-ac95-83f4376f4878"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c1b554fd-a609-4123-bf54-9c7e357e5246"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""09df635c-fc9c-496c-97ab-492972dc35f4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""61ec10b5-8f03-429e-aec7-4be6bfbcd901"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""54fbeb62-1151-4056-8552-cbe0055cce6b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1c32c7f6-bdf2-4a3a-8279-19bb0691d8a3"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8dc6cb9-eb6c-42b8-918d-86b3a5506f3a"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68d2ec5b-1161-4e12-aaeb-417c4b4491cb"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62acd91d-f8a9-4fd4-b746-aa84c8b4d38d"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ScrollZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Fighter"",
            ""id"": ""d0aef565-ee79-4881-ba26-2af42ef3dc18"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""19afe8d7-20fa-4341-9d39-acc31c4ab2bc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d5b3f330-83d1-4f48-9fb8-ef8936e3681b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollZoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ea9c5e8a-1d10-4007-932c-f43897ff9771"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disconnect"",
                    ""type"": ""Button"",
                    ""id"": ""1bb21570-f524-4ecc-ab16-6c08a47eac92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""60115287-f19a-4a38-a459-fa0dbcd8c39d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7a561238-e9b5-42c2-bf7b-58a0c4ae0a06"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""411a414d-e412-4531-a1e9-494200a4de35"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""49433c5f-9722-4e8a-b7f8-0dc9f5ee3b5d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3e536d50-5618-43b3-86cc-148a5546c110"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e26a7de6-948f-4574-9118-95b08da87b44"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3c6c6fc7-6890-42b4-88f9-81d1dba65f4e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37a78940-8fa4-4de5-a91e-5c75ed91f926"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1aed32aa-c492-40d5-b48c-28b9529126a8"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15926f71-a730-4043-a0b5-2b9a67879cc8"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ScrollZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6ab172b-301d-49ca-8ced-12bc7a58a849"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""780fe470-d06a-4131-bd2a-4a9361fb6068"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TPPlayer"",
            ""id"": ""99a3e09d-86d4-47fa-9e6e-c83a03a8bdb6"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3d90f94d-e6cb-4cc2-bb08-0b61d4aeb98a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eec947f5-ff09-4706-84f6-324e2d99c4b9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollZoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""05eeb77f-fbc6-4508-a0e3-47be5bc37a61"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disconnect"",
                    ""type"": ""Button"",
                    ""id"": ""a864715b-2de9-47e9-bf99-c6e17f53077d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6d6108e0-a096-4b06-bde6-3795c9d3832a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5ebfe1e4-1656-4dec-934f-3c2ea59559bd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""aec11f6d-917d-44db-8030-3b89ff646425"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4adaadf1-4e9e-4975-a9b4-0a2926de1f54"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3d0d71a4-9f41-464e-abd9-1d53b864faa0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a9d3c5db-6c49-4ea0-b8a5-fa9de81efe74"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""faed1485-1235-484d-ad42-9a5b77cb5d9a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9f52b24-186f-4266-9578-4cbc347a8cfb"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3361a74-fdc2-4b06-93dd-7baf5ce5a655"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Disconnect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""388f7808-1cb2-4cf0-9cc4-ef51f74625b8"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ScrollZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5cad8401-d528-441d-9424-466c92588992"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC;Controller"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // RTS
        m_RTS = asset.FindActionMap("RTS", throwIfNotFound: true);
        m_RTS_SetShipDestination = m_RTS.FindAction("SetShipDestination", throwIfNotFound: true);
        m_RTS_MousePosition = m_RTS.FindAction("MousePosition", throwIfNotFound: true);
        m_RTS_Movement = m_RTS.FindAction("Movement", throwIfNotFound: true);
        m_RTS_ActivateRotation = m_RTS.FindAction("ActivateRotation", throwIfNotFound: true);
        m_RTS_MouseDelta = m_RTS.FindAction("MouseDelta", throwIfNotFound: true);
        m_RTS_ScrollZoom = m_RTS.FindAction("ScrollZoom", throwIfNotFound: true);
        m_RTS_FocusOnTarget = m_RTS.FindAction("FocusOnTarget", throwIfNotFound: true);
        m_RTS_Disconnect = m_RTS.FindAction("Disconnect", throwIfNotFound: true);
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_LookRotation = m_Player.FindAction("LookRotation", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        // Turret
        m_Turret = asset.FindActionMap("Turret", throwIfNotFound: true);
        m_Turret_LookRotation = m_Turret.FindAction("LookRotation", throwIfNotFound: true);
        m_Turret_Disconnect = m_Turret.FindAction("Disconnect", throwIfNotFound: true);
        m_Turret_Shoot = m_Turret.FindAction("Shoot", throwIfNotFound: true);
        // Ship
        m_Ship = asset.FindActionMap("Ship", throwIfNotFound: true);
        m_Ship_Movement = m_Ship.FindAction("Movement", throwIfNotFound: true);
        m_Ship_MouseDelta = m_Ship.FindAction("MouseDelta", throwIfNotFound: true);
        m_Ship_ScrollZoom = m_Ship.FindAction("ScrollZoom", throwIfNotFound: true);
        m_Ship_Disconnect = m_Ship.FindAction("Disconnect", throwIfNotFound: true);
        // Fighter
        m_Fighter = asset.FindActionMap("Fighter", throwIfNotFound: true);
        m_Fighter_Movement = m_Fighter.FindAction("Movement", throwIfNotFound: true);
        m_Fighter_MouseDelta = m_Fighter.FindAction("MouseDelta", throwIfNotFound: true);
        m_Fighter_ScrollZoom = m_Fighter.FindAction("ScrollZoom", throwIfNotFound: true);
        m_Fighter_Disconnect = m_Fighter.FindAction("Disconnect", throwIfNotFound: true);
        m_Fighter_Shoot = m_Fighter.FindAction("Shoot", throwIfNotFound: true);
        // TPPlayer
        m_TPPlayer = asset.FindActionMap("TPPlayer", throwIfNotFound: true);
        m_TPPlayer_Movement = m_TPPlayer.FindAction("Movement", throwIfNotFound: true);
        m_TPPlayer_MouseDelta = m_TPPlayer.FindAction("MouseDelta", throwIfNotFound: true);
        m_TPPlayer_ScrollZoom = m_TPPlayer.FindAction("ScrollZoom", throwIfNotFound: true);
        m_TPPlayer_Disconnect = m_TPPlayer.FindAction("Disconnect", throwIfNotFound: true);
        m_TPPlayer_Jump = m_TPPlayer.FindAction("Jump", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // RTS
    private readonly InputActionMap m_RTS;
    private List<IRTSActions> m_RTSActionsCallbackInterfaces = new List<IRTSActions>();
    private readonly InputAction m_RTS_SetShipDestination;
    private readonly InputAction m_RTS_MousePosition;
    private readonly InputAction m_RTS_Movement;
    private readonly InputAction m_RTS_ActivateRotation;
    private readonly InputAction m_RTS_MouseDelta;
    private readonly InputAction m_RTS_ScrollZoom;
    private readonly InputAction m_RTS_FocusOnTarget;
    private readonly InputAction m_RTS_Disconnect;
    public struct RTSActions
    {
        private @InputActions m_Wrapper;
        public RTSActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SetShipDestination => m_Wrapper.m_RTS_SetShipDestination;
        public InputAction @MousePosition => m_Wrapper.m_RTS_MousePosition;
        public InputAction @Movement => m_Wrapper.m_RTS_Movement;
        public InputAction @ActivateRotation => m_Wrapper.m_RTS_ActivateRotation;
        public InputAction @MouseDelta => m_Wrapper.m_RTS_MouseDelta;
        public InputAction @ScrollZoom => m_Wrapper.m_RTS_ScrollZoom;
        public InputAction @FocusOnTarget => m_Wrapper.m_RTS_FocusOnTarget;
        public InputAction @Disconnect => m_Wrapper.m_RTS_Disconnect;
        public InputActionMap Get() { return m_Wrapper.m_RTS; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RTSActions set) { return set.Get(); }
        public void AddCallbacks(IRTSActions instance)
        {
            if (instance == null || m_Wrapper.m_RTSActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RTSActionsCallbackInterfaces.Add(instance);
            @SetShipDestination.started += instance.OnSetShipDestination;
            @SetShipDestination.performed += instance.OnSetShipDestination;
            @SetShipDestination.canceled += instance.OnSetShipDestination;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @ActivateRotation.started += instance.OnActivateRotation;
            @ActivateRotation.performed += instance.OnActivateRotation;
            @ActivateRotation.canceled += instance.OnActivateRotation;
            @MouseDelta.started += instance.OnMouseDelta;
            @MouseDelta.performed += instance.OnMouseDelta;
            @MouseDelta.canceled += instance.OnMouseDelta;
            @ScrollZoom.started += instance.OnScrollZoom;
            @ScrollZoom.performed += instance.OnScrollZoom;
            @ScrollZoom.canceled += instance.OnScrollZoom;
            @FocusOnTarget.started += instance.OnFocusOnTarget;
            @FocusOnTarget.performed += instance.OnFocusOnTarget;
            @FocusOnTarget.canceled += instance.OnFocusOnTarget;
            @Disconnect.started += instance.OnDisconnect;
            @Disconnect.performed += instance.OnDisconnect;
            @Disconnect.canceled += instance.OnDisconnect;
        }

        private void UnregisterCallbacks(IRTSActions instance)
        {
            @SetShipDestination.started -= instance.OnSetShipDestination;
            @SetShipDestination.performed -= instance.OnSetShipDestination;
            @SetShipDestination.canceled -= instance.OnSetShipDestination;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @ActivateRotation.started -= instance.OnActivateRotation;
            @ActivateRotation.performed -= instance.OnActivateRotation;
            @ActivateRotation.canceled -= instance.OnActivateRotation;
            @MouseDelta.started -= instance.OnMouseDelta;
            @MouseDelta.performed -= instance.OnMouseDelta;
            @MouseDelta.canceled -= instance.OnMouseDelta;
            @ScrollZoom.started -= instance.OnScrollZoom;
            @ScrollZoom.performed -= instance.OnScrollZoom;
            @ScrollZoom.canceled -= instance.OnScrollZoom;
            @FocusOnTarget.started -= instance.OnFocusOnTarget;
            @FocusOnTarget.performed -= instance.OnFocusOnTarget;
            @FocusOnTarget.canceled -= instance.OnFocusOnTarget;
            @Disconnect.started -= instance.OnDisconnect;
            @Disconnect.performed -= instance.OnDisconnect;
            @Disconnect.canceled -= instance.OnDisconnect;
        }

        public void RemoveCallbacks(IRTSActions instance)
        {
            if (m_Wrapper.m_RTSActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRTSActions instance)
        {
            foreach (var item in m_Wrapper.m_RTSActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RTSActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RTSActions @RTS => new RTSActions(this);

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_LookRotation;
    private readonly InputAction m_Player_Interact;
    public struct PlayerActions
    {
        private @InputActions m_Wrapper;
        public PlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @LookRotation => m_Wrapper.m_Player_LookRotation;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @LookRotation.started += instance.OnLookRotation;
            @LookRotation.performed += instance.OnLookRotation;
            @LookRotation.canceled += instance.OnLookRotation;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @LookRotation.started -= instance.OnLookRotation;
            @LookRotation.performed -= instance.OnLookRotation;
            @LookRotation.canceled -= instance.OnLookRotation;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Turret
    private readonly InputActionMap m_Turret;
    private List<ITurretActions> m_TurretActionsCallbackInterfaces = new List<ITurretActions>();
    private readonly InputAction m_Turret_LookRotation;
    private readonly InputAction m_Turret_Disconnect;
    private readonly InputAction m_Turret_Shoot;
    public struct TurretActions
    {
        private @InputActions m_Wrapper;
        public TurretActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @LookRotation => m_Wrapper.m_Turret_LookRotation;
        public InputAction @Disconnect => m_Wrapper.m_Turret_Disconnect;
        public InputAction @Shoot => m_Wrapper.m_Turret_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Turret; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TurretActions set) { return set.Get(); }
        public void AddCallbacks(ITurretActions instance)
        {
            if (instance == null || m_Wrapper.m_TurretActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TurretActionsCallbackInterfaces.Add(instance);
            @LookRotation.started += instance.OnLookRotation;
            @LookRotation.performed += instance.OnLookRotation;
            @LookRotation.canceled += instance.OnLookRotation;
            @Disconnect.started += instance.OnDisconnect;
            @Disconnect.performed += instance.OnDisconnect;
            @Disconnect.canceled += instance.OnDisconnect;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
        }

        private void UnregisterCallbacks(ITurretActions instance)
        {
            @LookRotation.started -= instance.OnLookRotation;
            @LookRotation.performed -= instance.OnLookRotation;
            @LookRotation.canceled -= instance.OnLookRotation;
            @Disconnect.started -= instance.OnDisconnect;
            @Disconnect.performed -= instance.OnDisconnect;
            @Disconnect.canceled -= instance.OnDisconnect;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
        }

        public void RemoveCallbacks(ITurretActions instance)
        {
            if (m_Wrapper.m_TurretActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITurretActions instance)
        {
            foreach (var item in m_Wrapper.m_TurretActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TurretActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TurretActions @Turret => new TurretActions(this);

    // Ship
    private readonly InputActionMap m_Ship;
    private List<IShipActions> m_ShipActionsCallbackInterfaces = new List<IShipActions>();
    private readonly InputAction m_Ship_Movement;
    private readonly InputAction m_Ship_MouseDelta;
    private readonly InputAction m_Ship_ScrollZoom;
    private readonly InputAction m_Ship_Disconnect;
    public struct ShipActions
    {
        private @InputActions m_Wrapper;
        public ShipActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Ship_Movement;
        public InputAction @MouseDelta => m_Wrapper.m_Ship_MouseDelta;
        public InputAction @ScrollZoom => m_Wrapper.m_Ship_ScrollZoom;
        public InputAction @Disconnect => m_Wrapper.m_Ship_Disconnect;
        public InputActionMap Get() { return m_Wrapper.m_Ship; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShipActions set) { return set.Get(); }
        public void AddCallbacks(IShipActions instance)
        {
            if (instance == null || m_Wrapper.m_ShipActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ShipActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @MouseDelta.started += instance.OnMouseDelta;
            @MouseDelta.performed += instance.OnMouseDelta;
            @MouseDelta.canceled += instance.OnMouseDelta;
            @ScrollZoom.started += instance.OnScrollZoom;
            @ScrollZoom.performed += instance.OnScrollZoom;
            @ScrollZoom.canceled += instance.OnScrollZoom;
            @Disconnect.started += instance.OnDisconnect;
            @Disconnect.performed += instance.OnDisconnect;
            @Disconnect.canceled += instance.OnDisconnect;
        }

        private void UnregisterCallbacks(IShipActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @MouseDelta.started -= instance.OnMouseDelta;
            @MouseDelta.performed -= instance.OnMouseDelta;
            @MouseDelta.canceled -= instance.OnMouseDelta;
            @ScrollZoom.started -= instance.OnScrollZoom;
            @ScrollZoom.performed -= instance.OnScrollZoom;
            @ScrollZoom.canceled -= instance.OnScrollZoom;
            @Disconnect.started -= instance.OnDisconnect;
            @Disconnect.performed -= instance.OnDisconnect;
            @Disconnect.canceled -= instance.OnDisconnect;
        }

        public void RemoveCallbacks(IShipActions instance)
        {
            if (m_Wrapper.m_ShipActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IShipActions instance)
        {
            foreach (var item in m_Wrapper.m_ShipActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ShipActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ShipActions @Ship => new ShipActions(this);

    // Fighter
    private readonly InputActionMap m_Fighter;
    private List<IFighterActions> m_FighterActionsCallbackInterfaces = new List<IFighterActions>();
    private readonly InputAction m_Fighter_Movement;
    private readonly InputAction m_Fighter_MouseDelta;
    private readonly InputAction m_Fighter_ScrollZoom;
    private readonly InputAction m_Fighter_Disconnect;
    private readonly InputAction m_Fighter_Shoot;
    public struct FighterActions
    {
        private @InputActions m_Wrapper;
        public FighterActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Fighter_Movement;
        public InputAction @MouseDelta => m_Wrapper.m_Fighter_MouseDelta;
        public InputAction @ScrollZoom => m_Wrapper.m_Fighter_ScrollZoom;
        public InputAction @Disconnect => m_Wrapper.m_Fighter_Disconnect;
        public InputAction @Shoot => m_Wrapper.m_Fighter_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Fighter; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FighterActions set) { return set.Get(); }
        public void AddCallbacks(IFighterActions instance)
        {
            if (instance == null || m_Wrapper.m_FighterActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_FighterActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @MouseDelta.started += instance.OnMouseDelta;
            @MouseDelta.performed += instance.OnMouseDelta;
            @MouseDelta.canceled += instance.OnMouseDelta;
            @ScrollZoom.started += instance.OnScrollZoom;
            @ScrollZoom.performed += instance.OnScrollZoom;
            @ScrollZoom.canceled += instance.OnScrollZoom;
            @Disconnect.started += instance.OnDisconnect;
            @Disconnect.performed += instance.OnDisconnect;
            @Disconnect.canceled += instance.OnDisconnect;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
        }

        private void UnregisterCallbacks(IFighterActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @MouseDelta.started -= instance.OnMouseDelta;
            @MouseDelta.performed -= instance.OnMouseDelta;
            @MouseDelta.canceled -= instance.OnMouseDelta;
            @ScrollZoom.started -= instance.OnScrollZoom;
            @ScrollZoom.performed -= instance.OnScrollZoom;
            @ScrollZoom.canceled -= instance.OnScrollZoom;
            @Disconnect.started -= instance.OnDisconnect;
            @Disconnect.performed -= instance.OnDisconnect;
            @Disconnect.canceled -= instance.OnDisconnect;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
        }

        public void RemoveCallbacks(IFighterActions instance)
        {
            if (m_Wrapper.m_FighterActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IFighterActions instance)
        {
            foreach (var item in m_Wrapper.m_FighterActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_FighterActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public FighterActions @Fighter => new FighterActions(this);

    // TPPlayer
    private readonly InputActionMap m_TPPlayer;
    private List<ITPPlayerActions> m_TPPlayerActionsCallbackInterfaces = new List<ITPPlayerActions>();
    private readonly InputAction m_TPPlayer_Movement;
    private readonly InputAction m_TPPlayer_MouseDelta;
    private readonly InputAction m_TPPlayer_ScrollZoom;
    private readonly InputAction m_TPPlayer_Disconnect;
    private readonly InputAction m_TPPlayer_Jump;
    public struct TPPlayerActions
    {
        private @InputActions m_Wrapper;
        public TPPlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_TPPlayer_Movement;
        public InputAction @MouseDelta => m_Wrapper.m_TPPlayer_MouseDelta;
        public InputAction @ScrollZoom => m_Wrapper.m_TPPlayer_ScrollZoom;
        public InputAction @Disconnect => m_Wrapper.m_TPPlayer_Disconnect;
        public InputAction @Jump => m_Wrapper.m_TPPlayer_Jump;
        public InputActionMap Get() { return m_Wrapper.m_TPPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TPPlayerActions set) { return set.Get(); }
        public void AddCallbacks(ITPPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_TPPlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TPPlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @MouseDelta.started += instance.OnMouseDelta;
            @MouseDelta.performed += instance.OnMouseDelta;
            @MouseDelta.canceled += instance.OnMouseDelta;
            @ScrollZoom.started += instance.OnScrollZoom;
            @ScrollZoom.performed += instance.OnScrollZoom;
            @ScrollZoom.canceled += instance.OnScrollZoom;
            @Disconnect.started += instance.OnDisconnect;
            @Disconnect.performed += instance.OnDisconnect;
            @Disconnect.canceled += instance.OnDisconnect;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
        }

        private void UnregisterCallbacks(ITPPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @MouseDelta.started -= instance.OnMouseDelta;
            @MouseDelta.performed -= instance.OnMouseDelta;
            @MouseDelta.canceled -= instance.OnMouseDelta;
            @ScrollZoom.started -= instance.OnScrollZoom;
            @ScrollZoom.performed -= instance.OnScrollZoom;
            @ScrollZoom.canceled -= instance.OnScrollZoom;
            @Disconnect.started -= instance.OnDisconnect;
            @Disconnect.performed -= instance.OnDisconnect;
            @Disconnect.canceled -= instance.OnDisconnect;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
        }

        public void RemoveCallbacks(ITPPlayerActions instance)
        {
            if (m_Wrapper.m_TPPlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITPPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_TPPlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TPPlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TPPlayerActions @TPPlayer => new TPPlayerActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IRTSActions
    {
        void OnSetShipDestination(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnActivateRotation(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnScrollZoom(InputAction.CallbackContext context);
        void OnFocusOnTarget(InputAction.CallbackContext context);
        void OnDisconnect(InputAction.CallbackContext context);
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLookRotation(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface ITurretActions
    {
        void OnLookRotation(InputAction.CallbackContext context);
        void OnDisconnect(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IShipActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnScrollZoom(InputAction.CallbackContext context);
        void OnDisconnect(InputAction.CallbackContext context);
    }
    public interface IFighterActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnScrollZoom(InputAction.CallbackContext context);
        void OnDisconnect(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface ITPPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnScrollZoom(InputAction.CallbackContext context);
        void OnDisconnect(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
}
